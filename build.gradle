plugins {
	id 'fabric-loom' version '0.9-SNAPSHOT'
	id 'maven-publish'
}

sourceCompatibility = JavaVersion.VERSION_16
targetCompatibility = JavaVersion.VERSION_16

archivesBaseName = name + '-' + minecraft_version + '-fabric'

sourceSets.main.java.srcDirs += 'java'
sourceSets.main.resources.srcDirs += 'resources'

repositories {
	maven {
		name = "CurseMaven"
		url = "https://www.cursemaven.com"
	}
	maven {
		name = "Cloth API"
		url = "https://maven.shedaniel.me/"
	}
	maven { 
		name = "WTHIT"
		url "https://maven.bai.lol" 
	}
}

configurations {
	provided
}

sourceSets {
	main {
		resources {
			srcDir 'src/generated/resources'
		}
		compileClasspath += configurations.provided
	}
}

dependencies {
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings loom.officialMojangMappings()
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"
	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

	modApi("me.shedaniel.cloth:cloth-config-fabric:${project.cloth_version}") { exclude(group: "net.fabricmc.fabric-api") }

	modCompileOnly "mcp.mobius.waila:wthit-api:fabric-${wthitVersion}"
}

loom {
	accessWidenerPath = file("src/main/resources/${project.name.toLowerCase()}.accesswidener")
}

// Process resources on build
processResources {
	// This will ensure that this task is redone when the versions change.
	inputs.property 'version', project.version

	filesMatching("fabric.mod.json") {
		expand "version": project.version
	}
}


tasks.withType(JavaCompile).configureEach {
	it.options.encoding = "UTF-8"
	it.options.release = 16
}

java {
	withSourcesJar()
}

jar {
	from("LICENSE") {
		rename { "${it}_${project.archivesBaseName}"}
	}
	manifest {
		attributes(["Specification-Title": project.name,
					"Specification-Vendor": project.author,
					"Specification-Version": "24.0",
					"Implementation-Title": project.name,
					"Implementation-Version": project.version,
					"Implementation-Vendor" : project.author,
					"Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")],)
	}
}
